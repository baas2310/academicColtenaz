crear un usuario:

INSERT INTO `usuario` (`idUsuario`, `Documento`, `TipoDocumento`, `Apellidos`, `Nombres`, `Email`, `Celular`, `Estado`, `Contraseña`, `idRol`) VALUES (NULL, '1057582202', 'C.C', 'Riaño Nossa', 'Néstor Javier', 'njriano2@misena.edu.co', '3115550057', 'Activo', '123456', '1');

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
crear un estudiante:

INSERT INTO `estudiante` (`idEstudiante`, `Documento`, `TipoDocumento`, `Apellidos`, `Nombres`, `Email`, `Celular`, `Estado`, `Contraseña`, `idCurso`, `idAcudiente`) VALUES (NULL, '123456789', 'T.I', 'Robledo', 'Jairo', 'jdrobledo@gmail.com', '3115556667', 'Inscrito', '123123', '6', '2');

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
asignar un docente:

INSERT INTO `asignaciondocente` (`idAsignacionDocente`, `idUsuario`, `idCurso`, `idMateria`) VALUES (NULL, '3', '6', '2');

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
crear una tarea:

INSERT INTO `tareas` (`idTareas`, `Tarea`, `idDocente`, `idEstudiante`, `idMateria`) VALUES (NULL, 'Investigar sobre el factor común ', '3', '2', '2');

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
crear una nota de una materia:

INSERT INTO `notas` (`idNotas`, `Nota`, `idMateria`, `idDocente`, `idEstudiante`) VALUES (NULL, 'Aceptable', '2', '3', '2');

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
crear una observacion:

INSERT INTO `observador` (`idObservador`, `Observacion`, `FechaHora`, `idDocente`, `idEstudiante`) VALUES (NULL, 'Buena Estudiante', '2018-07-23 07:05:00', '3', '2');


editar la observacion:

UPDATE `observador` SET `Observacion` = 'Buena Estudiante con buenas calificaciones' WHERE `observador`.`idObservador` = 1;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
querry para cargar los datos del estudiante con su acudiente

SELECT U.Documento,U.TipoDocumento,U.Apellidos,U.Nombres,U.Email,U.Celular,U.Direccion,Curso,CONCAT(usuario.Documento,'-',usuario.Nombres,' ',usuario.Apellidos) as Acudiente,Rol,U.Estado  FROM usuario U INNER JOIN rol R on U.idRol = R.idRol INNER JOIN usuario on usuario.idUsuario=U.idAcudiente INNER JOIN curso C on U.idCurso = C.idCurso


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
querry insertar o asignar a un docente

INSERT INTO `asignaciondocente` (`idAsignacionDocente`, `Year`, `idUsuario`, `idCurso`, `idMateria`) VALUES (NULL, '2019', '5', '20', '2');

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

querry para cargar la informacion de la asignacion del docente

SELECT AD.idAsignacionDocente, AD.Year, CONCAT('Cód: ',U.idUsuario, ' - No.Documento: ',U.Documento,' - ',U.Nombres,' ',U.Apellidos, ' - Celular: ',U.Celular) as idUsuario, 
                                        C.Curso as idCurso, M.Materia as idMateria FROM asignaciondocente AD 
                                        LEFT OUTER JOIN usuario U on AD.idUsuario = U.idUsuario 
                                        LEFT OUTER JOIN curso C on AD.idCurso = C.idCurso 
                                        LEFT OUTER JOIN materia M on AD.idMateria = M.idMateria


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

querry para cargar la informacion de la asignacion o registro del estudiante

SELECT R.idRegistro,R.Year, CONCAT('Cód: ',E.idEstudiante, ' - No.Documento: ',E.Documento,' - ',E.Nombres,' ',E.Apellidos, ' - Celular: ',E.Celular) as idEstudiante,C.Curso as idCurso FROM registro R 
                                        LEFT OUTER JOIN estudiante E on r.idEstudiante = E.idEstudiante 
                                        LEFT OUTER JOIN curso C on R.idCurso = C.idCurso

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

querry para cargar la informacion del acudiente en los datos del estudiante

SELECT E.idEstudiante,E.Documento,E.TipoDocumento,E.Apellidos,E.Nombres,E.Email,E.Password,E.Celular,E.Direccion,E.Estado,CONCAT('Cód: ',U.idUsuario, ' - No.Documento: ',U.Documento,' - ',U.Nombres,' ',U.Apellidos, ' - Celular: ',U.Celular) as idAcudiente,E.idRol FROM estudiante E INNER JOIN usuario U on E.idAcudiente = U.idUsuario